# Default values for litmus.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

portalScope: cluster

nameOverride: ""

# -- Additional labels
customLabels: {}
# my.company.com/concourse-cd: 2

adminConfig:
  DBUSER: "admin"
  DBPASSWORD: "1234"
  JWTSecret: "litmus-portal@123"
  VERSION: "2.3.0"
  # -- leave empty if uses Mongo DB deployed by this chart
  DB_SERVER: ""
  DB_PORT: "27017"

image:
  imageRegistryName: chaosnative
  # Optional pod imagePullSecrets
  imagePullSecrets:
    - name: regcred

ingress:
  enabled: false
  name: litmus-ingress
  annotations:
    {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  # nginx.ingress.kubernetes.io/rewrite-target: /$1

  host:
    # -- This is ingress hostname (ex: my-domain.com)
    name: ""
    paths:
      # -- You may need adapt the path depending your ingress-controller
      frontend: /(.*)
      # -- You may need adapt the path depending your ingress-controller
      backend: /backend/(.*)
  tls: []
  #  - secretName: chart-example-tls
  #    hosts: []

upgradeAgent:
  controlPlane:
    image:
      repository: upgrade-agent-cp
      tag: "ci"
      pullPolicy: "Always"
  nodeSelector: {}
  tolerations: []
  affinity: {}

portal:
  frontend:
    replicas: 1
    updateStrategy: {}
    ## Strategy for deployment updates.
    ##
    ## Example:
    ##
    ##   strategy:
    ##     type: RollingUpdate
    ##     rollingUpdate:
    ##       maxSurge: 1
    ##       maxUnavailable: 25%
    image:
      repository: cle-frontend
      tag: 2.3.0
      pullPolicy: "Always"
    containerPort: 8080
    customLabels: {}
    # my.company.com/tier: "frontend"

    resources: 
    # We usually recommend not to specify default resources and to leave this as a conscious
    # choice for the user. This also increases chances charts run on environments with little
    # resources, such as Minikube. If you do want to specify resources, uncomment the following
    # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
      limits:
        cpu: 250m
        memory: 512Mi
        ephemeral-storage: "1Gi"
      requests:
        cpu: 25m
        memory: 300Mi
        ephemeral-storage: "500Mi"
    livenessProbe:
      failureThreshold: 5
      initialDelaySeconds: 30
      periodSeconds: 10
      successThreshold: 1
      timeoutSeconds: 5
    readinessProbe:
      initialDelaySeconds: 5
      periodSeconds: 10
      successThreshold: 1
      timeoutSeconds: 1
    service:
      type: NodePort
      port: 9091
      targetPort: 8080
    virtualService:
      enabled: false
      hosts: []
      gateways: []
    nodeSelector: {}
    tolerations: []
    affinity: {}

  server:
    replicas: 1
    updateStrategy: {}
    ## Strategy for deployment updates.
    ##
    ## Example:
    ##
    ##   strategy:
    ##     type: RollingUpdate
    ##     rollingUpdate:
    ##       maxSurge: 1
    ##       maxUnavailable: 25%
    serviceAccountName: litmus-server-account
    customLabels: {}
    # my.company.com/tier: "backend"
    waitForMongodb:
      image:
        repository: curl
        tag: latest
        pullPolicy: "Always"

    serverVersionUpdater:
      image:
        repository: mongo-utils
        tag: latest
        pullPolicy: "Always"


    licenseServer:
      image:
        repository: cle-license-module
        tag: 2.3.0
        pullPolicy: "Always"
      containerPort: 8080
      resources: 
      # We usually recommend not to specify default resources and to leave this as a conscious
      # choice for the user. This also increases chances charts run on environments with little
      # resources, such as Minikube. If you do want to specify resources, uncomment the following
      # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
        limits:
          cpu: 250m
          memory: 512Mi
        requests:
          cpu: 25m
          memory: 300Mi
      service:
        type: ClusterIP
        port: 80
        targetPort: 8080

    graphqlServer:
      image:
        repository: cle-server
        tag: 2.3.0
        pullPolicy: "Always"
      containerPort: 8080
      imageEnv:
        ARGO_WORKFLOW_CONTROLLER_IMAGE: "litmuschaos/workflow-controller:v2.11.0"
        ARGO_WORKFLOW_EXECUTOR_IMAGE: "litmuschaos/argoexec:v2.11.0"
        LITMUS_CHAOS_OPERATOR_IMAGE: "litmuschaos/chaos-operator:2.3.0"
        LITMUS_CHAOS_RUNNER_IMAGE: "litmuschaos/chaos-runner:2.3.0"
        LITMUS_CHAOS_EXPORTER_IMAGE: "litmuschaos/chaos-exporter:2.3.0"
      genericEnv:
        SELF_CLUSTER: "true"
        CONTAINER_RUNTIME_EXECUTOR: "k8sapi"
        HUB_BRANCH_NAME: "v2.2.x"
        AGENT_DEPLOYMENTS: "[\"app=chaos-exporter\", \"name=chaos-operator\", \"app=event-tracker\", \"app=workflow-controller\"]"
        SUBSCRIBER_IMAGE: "chaosnative/cle-subscriber:2.3.0"
        EVENT_TRACKER_IMAGE: "chaosnative/cle-event-tracker:2.3.0"
      resources: 
      # We usually recommend not to specify default resources and to leave this as a conscious
      # choice for the user. This also increases chances charts run on environments with little
      # resources, such as Minikube. If you do want to specify resources, uncomment the following
      # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
        limits:
          cpu: 512m
          memory: 1Gi
        requests:
          cpu: 125m
          memory: 350Mi
      livenessProbe:
        failureThreshold: 5
        initialDelaySeconds: 30
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 5
      readinessProbe:
        initialDelaySeconds: 5
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 1
    authServer:
      image:
        repository: cle-auth-server
        tag: 2.3.0
        pullPolicy: "Always"
      containerPort: 3000
      env:
        ADMIN_USERNAME: "admin"
        ADMIN_PASSWORD: "litmus"
      resources: 
      # We usually recommend not to specify default resources and to leave this as a conscious
      # choice for the user. This also increases chances charts run on environments with little
      # resources, such as Minikube. If you do want to specify resources, uncomment the following
      # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
        limits:
          cpu: 250m
          memory: 512Mi
        requests:
          cpu: 25m
          memory: 150Mi
    service:
      type: NodePort
      graphqlServer:
        port: 9002
        targetPort: 8080
      authServer:
        port: 9003
        targetPort: 3000
    nodeSelector: {}
    tolerations: []
    affinity: {}

mongo:
  replicas: 1
  customLabels: {}
  # my.company.com/tier: "database"
  image:
    repository: mongo
    tag: 4.2.8
    pullPolicy: "Always"
  containerPort: 27017
  resources: 
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
    limits:
      cpu: 500m
      memory: 1Gi
    requests:
      cpu: 250m
      memory: 500Mi
  livenessProbe:
    failureThreshold: 5
    initialDelaySeconds: 30
    periodSeconds: 10
    successThreshold: 1
    timeoutSeconds: 5
  readinessProbe:
    initialDelaySeconds: 5
    periodSeconds: 10
    successThreshold: 1
    timeoutSeconds: 1
  persistence:
    size: 20Gi
    accessMode: ReadWriteOnce
    # storageClass: ""
  service:
    type: ClusterIP
    port: 27017
    targetPort: 27017
  # Service account to be used by mongo pods
  # serviceAccountName: "mongo-service-account"
  nodeSelector: {}
  tolerations: []
  affinity: {}

# OpenShift specific configuration
openshift:
  # If service should be exposed using an OpenShift route
  route:
    enabled: false
    name: litmus-portal
    annotations: {}
    host: ""